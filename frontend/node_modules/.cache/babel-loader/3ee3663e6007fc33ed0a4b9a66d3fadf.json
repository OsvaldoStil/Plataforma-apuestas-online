{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ciclo4\\\\Proyecto\\\\Plataforma apuestas online\\\\frontend\\\\src\\\\customers\\\\parts\\\\link.js\";\nimport { Component } from 'react'; //Necesario para todas las clases\n\nimport { Link } from 'react-router-dom'; // Gracias a esto podemos viajar en la url sin refrescar la pagina\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst link = {\n  // Creamos unos estilos para varias etiquetas lo ponemos aqui para ahorrar lineas de codigo\n  fontSize: \"19px\",\n  fontWeight: \"620\"\n}; //todos los estilos en javascript si tienen comillas no se les ponen si no que se utiliza el Camel Case\n\nexport default class LinkStructure extends Component {\n  //En vez de escribir muchas veces esta etiqueta lo ponemos aqui solo para requerirlo y ponerlo una vez\n  render() {\n    const {\n      className,\n      to,\n      name,\n      onClick\n    } = this.props; // el this.props estamos tomando de referencia los atributos pasados anteriormente\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: className,\n        to: to,\n        style: link,\n        onClick: onClick,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n; // los estilos en las etiquetas JSX se utilizan con esta sintaxi style={{ aqui adentro van los estilos }}","map":{"version":3,"sources":["C:/Ciclo4/Proyecto/Plataforma apuestas online/frontend/src/customers/parts/link.js"],"names":["Component","Link","link","fontSize","fontWeight","LinkStructure","render","className","to","name","onClick","props"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CAAmC;;AACnC,SAASC,IAAT,QAAqB,kBAArB,C,CAAyC;;;AAEzC,MAAMC,IAAI,GAAG;AAAE;AACXC,EAAAA,QAAQ,EAAE,MADD;AAETC,EAAAA,UAAU,EAAE;AAFH,CAAb,C,CAGG;;AAEH,eAAe,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAE;AACnDM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,EAAb;AAAiBC,MAAAA,IAAjB;AAAuBC,MAAAA;AAAvB,QAAmC,KAAKC,KAA9C,CADI,CACiD;;AACrD,wBACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEJ,SAAjB;AAA4B,QAAA,EAAE,EAAEC,EAAhC;AAAoC,QAAA,KAAK,EAAEN,IAA3C;AAAiD,QAAA,OAAO,EAAEQ,OAA1D;AAAA,kBAAoED;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AARgD;AASpD,C,CAED","sourcesContent":["import { Component } from 'react'; //Necesario para todas las clases\r\nimport { Link } from 'react-router-dom'; // Gracias a esto podemos viajar en la url sin refrescar la pagina\r\n\r\nconst link = { // Creamos unos estilos para varias etiquetas lo ponemos aqui para ahorrar lineas de codigo\r\n    fontSize: \"19px\",\r\n    fontWeight: \"620\"\r\n}; //todos los estilos en javascript si tienen comillas no se les ponen si no que se utiliza el Camel Case\r\n\r\nexport default class LinkStructure extends Component { //En vez de escribir muchas veces esta etiqueta lo ponemos aqui solo para requerirlo y ponerlo una vez\r\n    render(){\r\n        const { className, to, name, onClick } = this.props; // el this.props estamos tomando de referencia los atributos pasados anteriormente\r\n        return(\r\n            <li className=\"nav-item\">\r\n                <Link className={className} to={to} style={link} onClick={onClick}>{name}</Link>\r\n            </li>\r\n        );\r\n    };\r\n};\r\n\r\n// los estilos en las etiquetas JSX se utilizan con esta sintaxi style={{ aqui adentro van los estilos }}"]},"metadata":{},"sourceType":"module"}